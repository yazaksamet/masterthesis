hiddenWeight = matrix(sample(c(-100:100), numberOfOutputNodes*numberOfTotalHiddenUnits, TRUE)/10000, numberOfOutputNodes, numberOfTotalHiddenUnits)
hiddenValues = matrix(sample(c(0:0), 1*numberOfTotalHiddenUnits, TRUE), 1, numberOfTotalHiddenUnits)
hiddenValues[1,1] = biasUnitValue
inputWeight
hiddenWeight
hiddenValues
for (e in 1:epoch)
{
for(i in 1:dim(trainingData)[1])  # for each row
{
for (h in 2:dim(hiddenValues)[2])
{
hiddenNodeIndex = h - 1
hiddenValues[1,h] = calculateHiddenValue(hiddenNodeIndex, i)
}
}
}
hiddenValues
hiddenWeight[1,3]
hiddenWeight[1,3]*10
hiddenWeight[1,3]
hiddenWeight *  hiddenValues
help(rowsum)
x <- matrix(runif(100), ncol = 5)
group <- sample(1:8, 20, TRUE)
(xsum <- rowsum(x, group))
x <- matrix(runif(100), ncol = 5)
x
group <- sample(1:8, 20, TRUE)
group
(xsum <- rowsum(x, group))
xsum
help(sum)
hiddenWeight *  hiddenValues
sum(hiddenWeight *  hiddenValues)
calculateOutput <- function()
{
output <- sum(hiddenWeight *  hiddenValues)
return (output)
}
calculateOutput()
calculateOutput <- function()
{
output <- sum(hiddenWeight *  hiddenValues)
}
calculateOutput()
hiddenWeight
hiddenWeight[,-1]
matrix(1,0,0,0)
matrix(0:0,1,4)
hiddenValues
inputWeight
hiddenWeight
hiddenWeight * 0.
hiddenWeight * 0.1
hiddenWeight + 0.1
hiddenWeight + matrix(1:1,1,4)
q()
sigmoid <- function(n)
{
sig <- 1 / (1 + exp(-n))
return (sig)
}
sigmoid(0.5)
sigmoid(0)
sigmoid(-0.1)
sigmoid(-0.5)
(26^7) %% 33
(26^6) %% 33
(26^2) %% 33
(16^2) %% 33
(25*26) %% 33
(23*16) %% 33
(9^3) %% 55
(14^27) %% 55
(14^5) %% 55
(14^2) %% 55
(34^5) %% 55
(34*31) %% 55
41*17
1/512*ln(2)
1/512*log(2)
512*log(2)
log(10)
log10(10)
(7^5) %% 29
(3^12) %% 29
(2^12) %% 29
(88) %% 29
(88) %% 29
88 %% 29
(3^7) %% 29
(26*12) %% 29
(26*16) %% 29
(27*11*21) %% 31
(8^5) %% 467
(32^3) %% 467
(13^2) %% 17
(77) %% 17
(13^2)
(13^2 - 10) %% 17
(3^7) %% 33
(4^7) %% 33
(16^3) %% 33
(6292^131) %% 9797
(6292^10) %% 9797
(6292^5) %% 9797
(6144^2) %% 9797
(895^10) %% 9797
(23^31) %% 97
(6^17) %% 31
(17^5) %% 31
(26^2) %% 31
(3^10) %% 31
(6^13) %% 31
(13^15) %% 31
(13^14) %% 31
(13^15) %% 31
(13*19) %% 31
180 %% 31
7496 %% 2464
2464 %% 104
104 %% 72
72 %% 32
4001 %% 2689
2689 %% 1312
1312 %% 65
65 %% 12
12 %% 5
5 %% 2
7469 %% 2464
2464 %% 77
(4^5) %% 7
(6^11) %% 13
(5^10) %% 12
(5^7) %% 12
(16^2) %% 101
(98^2) %% 101
(18^2) %% 101
(2^10) %% 101
(2^9) %% 101
(14^7) %% 101
(5^7) %% 33
(14^3) %% 33
(9^10) %% 55
(9^5) %% 55
(34^5) %% 55
(34^4) %% 55
(34^5) %% 55
(34^6) %% 55
(9^2) %% 55
(34*26) %% 55
(5^3) %% 33
(9^3) %% 55
(23^3) %% 97
(42^10) %% 97
(8*23) %% 97
(17 - 67*87) %% 97
(8*31) %% 96
(15^8) %% 97
(87^5) %% 97
(81^2) %% 97
(62^5) %% 97
(15^7) %% 97
(7^10) %% 97
(87^6) %% 97
(36*83*94*27) %% 97
(23^2) %% 97
(44^8) %% 97
(62*23) %% 97
dim(trainingData)[1]
dim(trainingData)[2]
1293+238+92929+376
windowSizeStart = 3
windowSizeEnd = 20
intervalMultiplier = 20 # it is used to adjust model success
resultSet = data.frame(matrix(ncol = 6, nrow = 0))
colnames(resultSet) <- c("windowSize", "IntervalMultiplier", "tp", "fp", "tn", "fn")
setwd("C:/Users/sametyazak/Desktop/ynwa/bau/2017 - Thesis/code/r/")
completeData = read.csv(file="..\\..\\data\\workspace\\real_full_standard.csv", header=TRUE, sep=",")
completeData = cbind(completeData, predicted_value = 0, conf_low = 0, conf_high = 0, predicted_anomaly = 0, calculation_value = completeData$value)
getConfidenceInterval <- function(studentTIndex, windowSize, windowRecords) {
standardDeviation = sd(windowRecords$calculation_value)
mn = mean(windowRecords$calculation_value)
diff = (intervalMultiplier*standardDeviation)/sqrt(windowSize)
return (data.frame(mn-diff,mn+diff))
}
print("Prediction Start:")
print(date())
for (windowSize in windowSizeStart:windowSizeEnd) {
windowWeight = seq(1, windowSize, length=windowSize)
print(paste0("windowSize:", windowSize))
tp = 0; tn = 0; fp = 0; fn = 0
startIndex = (windowSize+1)
endIndex = dim(completeData)[1]
windowEndIndex = windowSize
windowStartIndex = 1
windowRecords = completeData[completeData$timestamp >= windowStartIndex & completeData$timestamp <= windowEndIndex,];
for (i in startIndex:endIndex) {
completeData[i,"predicted_value"] = 0
completeData[i,"conf_low"] = 0
completeData[i,"conf_high"] = 0
completeData[i,"predicted_anomaly"] = 0
if (i != startIndex) {
windowRecords = rbind(windowRecords[windowRecords$timestamp > (i-windowSize-1),], completeData[i-1,])
}
windowForecast = getConfidenceInterval(0, windowSize, windowRecords);
completeData[i,"predicted_value"] = completeData[i,"value"]
completeData[i,"conf_low"] = windowForecast[1,1]
completeData[i,"conf_high"] = windowForecast[1,2]
predictedAnomaly = if (completeData[i,"value"] <= completeData[i,"conf_high"] & completeData[i,"value"] >= completeData[i,"conf_low"]) 0 else 1
completeData[i,"predicted_anomaly"] = predictedAnomaly
if (completeData[i,"is_anomaly"] == 1) {
#completeData[i,"predicted_value"] = completeData[i,"value"]
lowerDistance = abs(completeData[i,"value"] - completeData[i,"conf_low"])
upperDistance = abs(completeData[i,"value"] - completeData[i,"conf_high"])
completeData[i,"calculation_value"] = (completeData[i,"conf_high"] + completeData[i,"conf_low"])/2
}
if (completeData[i,"is_anomaly"] == 1 & predictedAnomaly == 1) {
tp = tp + 1;
} else if (completeData[i,"is_anomaly"] == 1 & predictedAnomaly == 0) {
fn = fn + 1
} else if (completeData[i,"is_anomaly"] == 0 & predictedAnomaly == 1) {
fp = fp + 1
} else if (completeData[i,"is_anomaly"] == 0 & predictedAnomaly == 0) {
tn = tn + 1
}
}
resultSet = rbind(resultSet, data.frame(windowSize, intervalMultiplier, tp, fp, tn, fn))
print(paste0("tp:", tp, ", fp:", fp, ", tn:", tn, ", fn:", fn))
}
setwd("C:/Users/sametyazak/Desktop/ynwa/bau/2017 - Thesis/code/r/")
write.csv(resultSet, "window_20171227.csv")
setwd("C:/Users/sametyazak/Desktop/ynwa/bau/2017 - Thesis/code/r/")
write.csv(resultSet, "window_20171227.csv")
windowSizeStart = 3
windowSizeEnd = 20
intervalMultiplier = 20 # it is used to adjust model success
resultSet = data.frame(matrix(ncol = 6, nrow = 0))
colnames(resultSet) <- c("windowSize", "IntervalMultiplier", "tp", "fp", "tn", "fn")
setwd("C:/Users/sametyazak/Desktop/ynwa/bau/2017 - Thesis/code/r/")
completeData = read.csv(file="..\\..\\data\\workspace\\real_full_standard.csv", header=TRUE, sep=",")
fullResultSet = read.csv(file="window_20171227.csv", header=TRUE, sep=",")
View(fullResultSet)
fullResultSet = read.csv(file="window_20171227.csv", header=TRUE, sep=",")
fullResultSet = cbind(fullResultSet,
sensitivity = fullResultSet$tp / (fullResultSet$tp + fullResultSet$fn),
positivePredictive = fullResultSet$tp / (fullResultSet$tp + fullResultSet$fp),
specificity = fullResultSet$tn / (fullResultSet$tn + fullResultSet$fp),
negativePredictive = fullResultSet$tn / (fullResultSet$tn + fullResultSet$fn))
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(fpAnomalies$timestamp , fpAnomalies$conf_low), col="green", pch=17)
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="green", pch=17)
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="green", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="green", pch=17)
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="green", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
blockData = completeData[completeData$timestamp > 1500 & completeData$timestamp <= 3000,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp - 1500, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp - 1500, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp - 1500, fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
blockData = completeData[completeData$timestamp <= 4500 & completeData$timestamp > 3000,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp - 3000, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp - 3000, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp - 3000, fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
blockData = completeData[completeData$timestamp <= 4500 & completeData$timestamp > 3000,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp - 3000, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp - 3000, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp - 3000, fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="green", pch=17)
blockData = completeData[completeData$timestamp <= 4500 & completeData$timestamp > 3000,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp - 3000, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp - 3000, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp - 3000, fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="green")
blockData = completeData[completeData$timestamp <= 4500 & completeData$timestamp > 3000,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp - 3000, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp - 3000, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp - 3000, fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="green")
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval"), col = c("green", "yellow", "red", "grey"),
text.col = "black", lty = c(2,1),
bg = "gray90", cex = 0.5)
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90")
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7)
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(2,1))
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(17,17,17,17,17))
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(17,17,17,17,17), pch=c(17,17,17,17,17))
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(1,1,1,1,1), pch=c(17,17,17,17,17))
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(1,1,1,1,1), pch=c(17,17,17,1,1))
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(1,1,1,1,1), pch=c(17,17,17,20,20))
blockData = completeData[completeData$timestamp > 1500 & completeData$timestamp <= 3000,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp - 1500, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp - 1500, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp - 1500, fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp - 1500, blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp - 1500, blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(1,1,1,1,1), pch=c(17,17,17,20,20))
blockData = completeData[completeData$timestamp <= 4500 & completeData$timestamp > 3000,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value))
points(data.frame(tpAnomalies$timestamp - 3000, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp - 3000, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp - 3000, fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp - 3000, blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp - 3000, blockData$conf_high), col="grey")
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(1,1,1,1,1), pch=c(17,17,17,20,20))
blockData = completeData[completeData$timestamp <= 1500,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value), xlab="Timestamp", ylab="Value")
points(data.frame(tpAnomalies$timestamp, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp , fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp , blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(1,1,1,1,1), pch=c(17,17,17,20,20))
blockData = completeData[completeData$timestamp <= 4500 & completeData$timestamp > 3000,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value), xlab="Timestamp", ylab="Value")
points(data.frame(tpAnomalies$timestamp - 3000, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp - 3000, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp - 3000, fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp - 3000, blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp - 3000, blockData$conf_high), col="grey")
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(1,1,1,1,1), pch=c(17,17,17,20,20))
blockData = completeData[completeData$timestamp > 1500 & completeData$timestamp <= 3000,]
tpAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 1,]
fnAnomalies = blockData[blockData$is_anomaly == 1 & blockData$predicted_anomaly == 0,]
fpAnomalies = blockData[blockData$is_anomaly == 0 & blockData$predicted_anomaly == 1,]
plot.ts(ts(blockData$value), xlab="Timestamp", ylab="Value")
points(data.frame(tpAnomalies$timestamp - 1500, tpAnomalies$value), col="green", pch=17)
points(data.frame(fnAnomalies$timestamp - 1500, fnAnomalies$value), col="yellow", pch=17)
points(data.frame(fpAnomalies$timestamp - 1500, fpAnomalies$value), col="red", pch=17)
lines(data.frame(blockData$timestamp - 1500, blockData$conf_low), col="grey", pch=17)
lines(data.frame(blockData$timestamp - 1500, blockData$conf_high), col="grey", pch=17)
legend("topleft", c("True Positive", "False Negative", "False Positive", "Confidence Interval", "Standardized Data"), col = c("green", "yellow", "red", "grey", "black"), text.col = "black", bg = "gray90", cex = 0.7, lty = c(1,1,1,1,1), pch=c(17,17,17,20,20))
